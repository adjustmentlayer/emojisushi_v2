description = "Default"

[cart]
showDiscountApplier = 1
showTaxes = 1

[mallDependencies]

[session]
security = "all"

[staticPage]
useContent = 1
default = 0

[currencyPicker]

[localePicker]
forceUrl = 1

[enhancedEcommerceAnalytics]

==
<?php
use Symfony\Component\HttpFoundation\Session\Session;
use Carbon\Carbon;
function onStart() {
    $session = new Session();
    $spotsInfo['spots'] = [
        [
            'id'=> 1,
'name' => 'Черноморск',
'chat_id' => env('TELEGRAM_CHAT_ID_CHERNO'),
'spot_tablet' => 1,
'phones' => [
"+38 (093) 366 28 69",
"+38 (068) 303 45 51"
]
],
[
'id'=> 2,
'name' => 'Одесса',
'chat_id' => env('TELEGRAM_CHAT_ID_ODESSA'),
'spot_tablet' => 2,
'phones' => [
"+38 (093) 045 14 40",
"+38 (098) 970 37 67"
]
],
];
if (!$session->has('activeSpotId')) {
$session->set('activeSpotId', $spotsInfo['spots'][0]['id']);
}

$exist = 0;
if (isset($_POST['spot'])) {

foreach ($spotsInfo['spots'] as $s) {
if ($_POST['spot'] == $s['id']) {
$exist++;
}
}

if ($exist) {
$session->set('activeSpotId', $_POST['spot']);

}
}
$session->set('spots', $spotsInfo['spots']);

foreach ($spotsInfo['spots'] as $s) {
if ($session->get('activeSpotId') == $s['id']) {
$this->page['activeSpotName'] = $s['name'];
$this->page['phones'] = $s['phones'];
$session->set('activeChatId', $s['chat_id']);
}
}

$this->page['activeSpotId'] = $session->get('activeSpotId');
$this->page['spots'] = $session->get('spots');

$this->page['query'] = input('q');

$start = explode(':','10:00');
$finish = explode(':','22:30');

$dt = Carbon::now();
$hour = $dt->hour;
$minute = $dt->minute;


$closed =
($hour < $start[0]  || ($start[0] == $hour && $minute < $start[1])) ||
($hour > $finish[0] || ($finish[0] == $hour && $minute > $finish[1] ));


$this->page['shop_is_closed'] = $closed;

}
?>
==
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="description" content="{{ this.page.meta_description }}">
    <link rel="icon" href="{{ '/favicon.ico' | app }}" />
    <title>{{ this.page.title }}</title>
    {% styles %}
    <link rel="stylesheet" href="{{ ['assets/main.css'] | theme }}">
    <script src="{{ ['@jquery'] | theme }}"></script>
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.1/dist/alpine.min.js" defer></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/magnific-popup.min.css" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/iScroll/5.2.0/iscroll.min.js"  crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/drawer/3.2.2/js/drawer.min.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/drawer/3.2.2/css/drawer.min.css"  crossorigin="anonymous" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    {% component 'enhancedEcommerceAnalytics' %}
    {% component 'mallDependencies' %}
</head>
<body class="bg-black text-white drawer drawer--right relative">
{% partial 'header' %}
{% partial 'navigation' %}

<main class="max-w-6xl w-full mx-auto py-8">
    {% page %}
</main>

{% partial 'footer' %}
<div id="js-mfp-wrapper" class="hidden-wrapper hidden-wrapper--no-gap mfp-hide">
    <div id="js-mall-cart">
        {% partial 'cart' %}
    </div>

</div>

<div class="js-mall-loader flex justify-center items-center min-screen w-full fixed z-40 bg-black"
     style="visibility: hidden; opacity: 0;top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transition: all ease-in 0.5s">
    <img src="/themes/oc-mall-theme-master/assets/images/bean_eater.svg" alt="">
</div>

<script src="{{ 'assets/app.js' | theme }}"></script>
{% framework extras %}
{% scripts %}

<script>
    function dropdown() {
        return {
            show: false,
            activeSpotId: 1,
            spots: [],
            getActiveSpot() {
                let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0]: "name";
                let _this2 = this;
                let value = "";
                _this2.spots.forEach(function(el){
                    if(el.id == _this2.activeSpotId){
                        value = el[key];
                    }
                })

                return value;
            },
            changeSpot(id){
                this.activeSpotId = id;
                this.close();
                this.$nextTick(() => { this.$refs.spotForm.submit(); });

            },
            open() { this.show = true },
            close() { this.show = false },
        }
    }

    $('.js-mfp-inline').magnificPopup({
        type:'inline',
        removalDelay: 300,
        fixedContentPos: false,
        fixedBgPos: true,
        mainClass: 'zoom-in',
        midClick: true // Allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source in href.
    });


    $(function () {
        var $body = $('body');
        $$update = {'cart': '#js-mall-cart'};

        if($('#quickCheckout').length){
            $$update = { ...$$update, 'quickCheckout::cart': '.js-mall-cart-checkout' }
        }

        $.subscribe('mall.discount.applied', refreshCart);
        $.subscribe('mall.shipping.update', refreshCart);
        $.subscribe('mall.address.update', refreshCart);
        //$.subscribe('mall.cart.productAdded', refreshCart);

        function refreshCart () {
            $.request('cart::onRun', {
                update: $$update
            })
        }


        var $count = $('.mall-cart-count');
        var $total = $('.mall-cart-total');
        $.subscribe('products.cart.productAdded', function (e, data) {
            $count.removeClass('invisible').text(data.new_items_count).show();
            $total.text(data.total_post_taxes);
        });
        $.subscribe('mall.cart.productRemoved', function (e, data) {
            $count.text(data.new_items_count);
            $total.text(data.total_post_taxes);
        });

        $.subscribe('mall.cart.update', function (e, data) {
            $total.text(data.total_post_taxes);
            refreshCart();
        });




        $body.on('change', '.js-mall-quantity', function () {
            $.request('cart::onUpdateQuantity', {
                data: {id: this.dataset.id, quantity: this.value},
                update: $$update,
                loading: $.oc.stripeLoadIndicator,
                flash: true,
                success: function (data) {
                    this.success(data)
                    $.publish('mall.cart.update', data)
                },
                handleFlashMessage: function (message, type) {
                    $.oc.flashMsg({text: message, class: type})
                }
            })
        });


        $body.on('click', '.js-mall-add-product', function () {
            $.request('products::onAddToCart', {
                data: {product: this.dataset.product, variant: this.dataset.variant},
                update: $$update,
                loading: $.oc.stripeLoadIndicator,
                flash: true,
                success: function (data) {
                    this.success(data)
                    $.publish('mall.cart.update', data)
                    $.publish('products.cart.productAdded', data)
                },
                handleFlashMessage: function (message, type) {
                    $.oc.flashMsg({text: message, class: type})
                }
            })
        });

        $body.on('click', '.js-mall-remove-product', function () {
            $.request('cart::onRemoveProduct', {
                data: {id: this.dataset.id},
                update: $$update,
                loading: $.oc.stripeLoadIndicator,
                success: function (data) {
                    this.success(data)
                    $.publish('mall.cart.update', data)
                    $.publish('mall.cart.productRemoved', data)
                }
            })
        });


        $body.on('click', '.js-wcart-item__remove-notice-open', function(){
            console.log('clicked');
            $('.js-wcart-item.is-notice').each(function(){
                $(this).removeClass('is-notice');
            })
            $(this).closest('.js-wcart-item').addClass('is-notice');

        });
        $body.on('click', '.js-wcart-item__remove-notice-close', function(){
            $(this).closest('.js-wcart-item').removeClass('is-notice');
        });

        $body.on('click', '.js-wcart-item__remove', function(){
            $(this).closest('.js-wcart-item').removeClass('is-notice');
        });



        $body.on('click', '.js-wcart-item__collapse-toggle', function(){
            $(this).closest('.js-wcart-item').toggleClass('is-opened');
        });

        $body.on('click', '.js-wcart-spinner__increment', function(){
            console.log('click');
            let $input = $(this).parent().find('.js-wcart-spinner__quantity');
            let $currVal = parseInt($input.val());
            $input.val($currVal + 1);
            $input.trigger('change');
        });

        $body.on('click', '.js-wcart-spinner__decrement', function(){
            let $input = $(this).parent().find('.js-wcart-spinner__quantity');
            let $currVal = parseInt($input.val());
            if($currVal < 2){
                return;
            }
            $input.val($currVal - 1);
            $input.trigger('change');
        });

    })

</script>


{% if this.page.shop_is_closed %}
    <script>
        Swal.fire({
            title: 'Ресторан закрыт!',
            text: 'Заказы принимаются с 10:00 до 22:30',
            icon: 'warning',
            confirmButtonText: 'Ок'
        })
    </script>
{% endif %}


{% flash %}
    <script>
        $(function() {
            $.oc.flashMsg({type: '{{ type }}', text: '{{ message }}'})
        })
    </script>
{% endflash %}
</body>
</html>
